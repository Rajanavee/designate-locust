username = None
password = None

# set to true to reset stats after rampup
reset_stats = False

designate_host = 'http://192.168.33.20:9001'
auth_endpoint = 'https://192.168.33.20:5000'
tenant_id_in_url = False

use_digaas = False
digaas_endpoint = 'http://localhost:9090'
nameservers = [
    '192.168.33.20',
]
digaas_timeout = 300
digaas_interval = 10

graphite_host = None
graphite_port = None

min_wait = 100
max_wait = 1000

n_zones_for_get_per_tenant = 10
n_zones_for_delete_per_tenant = 10
n_recordsets_for_get_per_tenant = 10
n_recordsets_for_delete_per_tenant = 10

# each entry in these tenant lists is (username, api_key)
# if the api_key is set to None, the test will run in noauth mode
large_tenants = [
    ('dnspftest1', None),
    ('dnspftest2', None),
]
small_tenants = [
    ('dnspftest3', None),
    ('dnspftest4', None),
]
assert not set(large_tenants).intersection(set(small_tenants))

class Weights(object):

    def __init__(self, get_domain_by_id, get_domain_by_name, list_domain,
                 import_zone, export_domain, create_domain, modify_domain,
                 remove_domain, list_records, get_record, create_record,
                 remove_record, modify_record):
        self.get_domain_by_id = get_domain_by_id
        self.get_domain_by_name = get_domain_by_name
        self.list_domain = list_domain
        self.import_zone = import_zone
        self.export_domain = export_domain
        self.create_domain = create_domain
        self.modify_domain = modify_domain
        self.remove_domain = remove_domain
        self.list_records = list_records
        self.get_record = get_record
        self.create_record = create_record
        self.remove_record = remove_record
        self.modify_record = modify_record

    def total(self):
        return sum(self.__dict__.itervalues())

large_weights = Weights(
    get_domain_by_id = 576,
    get_domain_by_name = 192,
    list_domain = 768,
    import_zone = 60,
    export_domain = 0,
    create_domain = 120,
    modify_domain = 0,
    remove_domain = 0,
    list_records = 324,
    get_record = 216,
    create_record = 1560,
    modify_record = 600,
    remove_record = 300,

)
total_large_weight = large_weights.total()

small_weights = Weights(
    get_domain_by_id = 342,
    get_domain_by_name = 114,
    list_domain = 456,
    import_zone = 240,
    export_domain = 60,
    create_domain = 1980,
    modify_domain = 600,
    remove_domain = 720,
    list_records = 6984,
    get_record = 4656,
    create_record = 180,
    modify_record = 60,
    remove_record = 480,

)
total_small_weight = small_weights.total()
